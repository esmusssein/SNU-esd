library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

-- 8 LEDs Controller with 8BIT PWM Generator
-- 8BIT (CLK * 256(2^8))Level Shades
-- LED input "10000000" 128 level
-- LED input "01000000"  64 level
-- LED input "00100000"  32 level
-- LED input "00010000"  16 level
-- LED input "00001000"   8 level
-- LED input "00000100"   4 level
-- LED input "00000010"   2 level
-- LED input "00000001"   1 level


entity LED_PWM_GEN is

port( 
		CLK			: in std_logic;						-- 54Mhz			
		RST			: in std_logic;						-- Reset 
		LED			: out std_logic_vector(7 downto 0);	-- LED 7~0 output
		SW2,clk3k	: in std_logic
	);
	
end LED_PWM_GEN;

architecture a of LED_PWM_GEN is

component LED_Data is
port( 
		CLK			: in std_logic;   						-- 27Mhz
		RST			: in std_logic;							-- Reset
		ICLK		: in std_logic;							-- Frame Clock
		led_8		: out std_logic_vector(7 downto 0);
		led_7		: out std_logic_vector(7 downto 0);
		led_6		: out std_logic_vector(7 downto 0);
		led_5		: out std_logic_vector(7 downto 0);
		led_4		: out std_logic_vector(7 downto 0);
		led_3		: out std_logic_vector(7 downto 0);
		led_2		: out std_logic_vector(7 downto 0);
		led_1		: out std_logic_vector(7 downto 0)
	);
end component;


signal cnt	  : integer range 0 to 255;
signal shades : std_logic_vector(7 downto 0);

signal LED_CLK,FCLK : std_logic;

signal clk_cnt	: std_logic_vector(11 downto 0);
signal led_clk_buf : std_logic_vector(1 downto 0);
signal fclk_buf : std_logic_vector(1 downto 0);

signal f_sel	  : std_logic_vector(3 downto 0);

signal iclk	: std_logic;
signal	DATA_A		: std_logic_vector(7 downto 0);	-- LED 7 input
signal	DATA_B		: std_logic_vector(7 downto 0);	-- LED 6 input
signal	DATA_C		: std_logic_vector(7 downto 0);	-- LED 5 input
signal	DATA_D		: std_logic_vector(7 downto 0);	-- LED 4 input
signal	DATA_E		: std_logic_vector(7 downto 0);	-- LED 3 input
signal	DATA_F		: std_logic_vector(7 downto 0);	-- LED 2 input
signal	DATA_G		: std_logic_vector(7 downto 0);	-- LED 1 input
signal	DATA_H		: std_logic_vector(7 downto 0);	-- LED 0 input

begin

led_d : LED_Data
port map (
		CLK			=> CLK,
		RST			=> RST,							
		ICLK		=> ICLK,							
		led_8		=>DATA_A,
		led_7		=>DATA_B,
		led_6		=>DATA_C,
		led_5		=>DATA_D,
		led_4		=>DATA_E,
		led_3		=>DATA_F,
		led_2		=>DATA_G,
		led_1		=>DATA_H
);
---------------------------------------------------------------------
--clk_gen
-------------------------------------------------------------------------

	process(CLK,RST)
	begin
		if RST = '0' then
			clk_cnt <= "000000000000";
			LED_CLK <= '0';
		elsif rising_edge(clk) then
			if clk_cnt = "110110111100" then
				clk_cnt <= "000000000000";
				LED_CLK <= '1';
			else
				clk_cnt <= clk_cnt + '1';
				LED_CLK <= '0';
			end if;
		end if;
	end process;

	process(CLK,RST)
	begin
		if RST = '0' then
			led_clk_buf <= "00";
		elsif rising_edge(clk) then
			led_clk_buf <= led_clk_buf(0) & LED_CLK;
		end if;
	end process;
	
-------------------------------------------------------------------------
--PWM Gen
-------------------------------------------------------------------------

	process(clk,RST)									
	begin
		if RST = '0'then
			cnt <= 0;
		elsif rising_edge(clk) then
			if led_clk_buf = "01" then		
				if cnt = 255 then
					cnt <= 0;
					FCLK <= '1';
				else
					cnt <= cnt + 1;
					FCLK <= '0';
				end if;
			end if;
			
			if (cnt >=0 and cnt < 1 ) then
				shades <= "00000001";
			elsif (cnt >=1 and cnt <3)then
				shades <= "00000010";
			elsif (cnt >=3 and cnt <7)then
				shades <= "00000100";
			elsif (cnt >=7 and cnt <15)then
				shades <= "00001000";
			elsif (cnt >=15 and cnt <31)then
				shades <= "00010000";
			elsif (cnt >=31 and cnt <63)then
				shades <= "00100000";
			elsif (cnt >=63 and cnt <127)then
				shades<= "01000000";
			elsif (cnt >=127 and cnt <=255)then
				shades<= "10000000";
			else
				shades <= "00000000";
			end if;			
			
		end if;
	end process;

	process(CLK,RST)
	begin
		if RST = '0' then
			fclk_buf <= "00";
		elsif rising_edge(clk) then
			fclk_buf <= fclk_buf(0) & fclk;
		end if;
	end process;

	PROCESS(RST,clk3k)
	variable clk_cnt : integer range 0 to 3;
	BEGIN
		IF RST = '0' THEN
			f_sel <= "0101";
			clk_cnt := 0;
		ELSIF clk3k='1' AND clk3k'EVENT THEN
			if SW2 = '0' then
				if clk_cnt >= 3 then
					clk_cnt := 3;
				else
					clk_cnt := clk_cnt + 1;
				end if;
				
				if clk_cnt = 2 then
					f_sel <= f_sel + 1;
				else
					f_sel <= f_sel;
				end if;
			else
				clk_cnt := 0;
			end if;
		END IF;
	END PROCESS;
	
	process(CLK,RST)
	variable cnt : integer range 0 to 15;
	begin
		if RST = '0' then
			cnt := 0;
		elsif rising_edge(clk) then
			if fclk_buf = "01" then		
				if cnt = f_sel then					
					cnt := 0;
					iclk <= '1';
				else
					cnt := cnt + 1;
					iclk <= '0';
				end if;
			end if;
		end if;
	end process;	

LED(7) <= (DATA_A(7)and SHADES(7))or(DATA_A(6)and SHADES(6))or(DATA_A(5)and SHADES(5))or(DATA_A(4)and SHADES(4))or     
			(DATA_A(3)and SHADES(3))or (DATA_A(2)and SHADES(2))or (DATA_A(1)and SHADES(1))or (DATA_A(0)and SHADES(0));  
LED(6) <= (DATA_B(7)and SHADES(7))or(DATA_B(6)and SHADES(6))or(DATA_B(5)and SHADES(5))or(DATA_B(4)and SHADES(4))or     
			(DATA_B(3)and SHADES(3))or (DATA_B(2)and SHADES(2))or (DATA_B(1)and SHADES(1))or (DATA_B(0)and SHADES(0));  
LED(5) <= (DATA_C(7)and SHADES(7))or(DATA_C(6)and SHADES(6))or(DATA_C(5)and SHADES(5))or(DATA_C(4)and SHADES(4))or     
			(DATA_C(3)and SHADES(3))or (DATA_C(2)and SHADES(2))or (DATA_C(1)and SHADES(1))or (DATA_C(0)and SHADES(0));  
LED(4) <= (DATA_D(7)and SHADES(7))or(DATA_D(6)and SHADES(6))or(DATA_D(5)and SHADES(5))or(DATA_D(4)and SHADES(4))or     
			(DATA_D(3)and SHADES(3))or (DATA_D(2)and SHADES(2))or (DATA_D(1)and SHADES(1))or (DATA_D(0)and SHADES(0));  
LED(3) <= (DATA_E(7)and SHADES(7))or(DATA_E(6)and SHADES(6))or(DATA_E(5)and SHADES(5))or(DATA_E(4)and SHADES(4))or     
			(DATA_E(3)and SHADES(3))or (DATA_E(2)and SHADES(2))or (DATA_E(1)and SHADES(1))or (DATA_E(0)and SHADES(0));
LED(2) <= (DATA_F(7)and SHADES(7))or(DATA_F(6)and SHADES(6))or(DATA_F(5)and SHADES(5))or(DATA_F(4)and SHADES(4))or     
			(DATA_F(3)and SHADES(3))or (DATA_F(2)and SHADES(2))or (DATA_F(1)and SHADES(1))or (DATA_F(0)and SHADES(0)); 
LED(1) <= (DATA_G(7)and SHADES(7))or(DATA_G(6)and SHADES(6))or(DATA_G(5)and SHADES(5))or(DATA_G(4)and SHADES(4))or     
			(DATA_G(3)and SHADES(3))or (DATA_G(2)and SHADES(2))or (DATA_G(1)and SHADES(1))or (DATA_G(0)and SHADES(0));  
LED(0) <= (DATA_H(7)and SHADES(7))or(DATA_H(6)and SHADES(6))or(DATA_H(5)and SHADES(5))or(DATA_H(4)and SHADES(4))or     
			(DATA_H(3)and SHADES(3))or (DATA_H(2)and SHADES(2))or (DATA_H(1)and SHADES(1))or (DATA_H(0)and SHADES(0)); 

end a;